legend.text=element_text(family='halyard_light')
)
data_a %>% ggplot(aes(x=groups,
y=values,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("%")+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
library(ggplot2)
library(ggplot2)
library(readxl)
library(ggpubr)
library(scales)
library(dplyr)
library(ggrepel)
library(ggtext)
library(stringr)
library(ggsignif)
library(showtext)
setwd('/Users/htr365/Documents/Side_Projects/13_war_on_drugs/github/')
source('utils/clean_WHO.R')
font_add('halyard_light','/Users/htr365/Documents/Side_Projects/13_war_on_drugs/github/halyard-font/Halyard-Text-Book.ttf')
font_add('halyard','/Users/htr365/Documents/Side_Projects/13_war_on_drugs/github/halyard-font/Halyard-Text-Medium.ttf')
showtext_auto()
# import theme & set base parameters
source('utils/theme.R')
base_size <- define_base_size()
colors <- set_colors()
data <- data.frame(groups =c('All','All','People with prior history of depression or suidice atempt','People with prior history of depression or suidice atempt'),
treatment=c('Treated with Gliptins','Treated with GLP-1RAs','Treated with Gliptins','Treated with GLP-1RAs'),
sample_size = c(373041,372944,88325,88325),
suicides = c(106,250,68,180))
############# generate 'naked' graph
data %>% ggplot(aes(x=groups,
y=suicides/sample_size,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("%")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
library(ggplot2)
library(readxl)
library(ggpubr)
library(scales)
library(dplyr)
library(ggrepel)
library(ggtext)
library(stringr)
library(ggsignif)
library(showtext)
setwd('/Users/htr365/Documents/Side_Projects/13_war_on_drugs/github/')
source('utils/clean_WHO.R')
font_add('halyard_light','/Users/htr365/Documents/Side_Projects/13_war_on_drugs/github/halyard-font/Halyard-Text-Book.ttf')
font_add('halyard','/Users/htr365/Documents/Side_Projects/13_war_on_drugs/github/halyard-font/Halyard-Text-Medium.ttf')
showtext_auto()
# import theme & set base parameters
source('utils/theme.R')
base_size <- define_base_size()
colors <- set_colors()
#switch color order
tmp <- colors[1]
colors[1] <- colors[2]
colors[2] <- tmp
data <- data.frame(groups =c('All','All','People with prior history of depression or suidice atempt','People with prior history of depression or suidice atempt'),
treatment=c('Treated with Gliptins','Treated with GLP-1RAs','Treated with Gliptins','Treated with GLP-1RAs'),
sample_size = c(373041,372944,88325,88325),
suicides = c(106,250,68,180))
############# generate 'naked' graph
data %>% ggplot(aes(x=groups,
y=suicides/sample_size,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("%")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
data <- data.frame(groups =c('All','All','People with prior history of depression or suidice atempt','People with prior history of depression or suidice atempt'),
treatment=c(,'Treated with GLP-1RAs','Treated with Gliptins','Treated with GLP-1RAs','Treated with Gliptins'),
sample_size = c(373041,372944,88325,88325),
suicides = c(106,250,68,180))
data %>% ggplot(aes(x=groups,
y=suicides/sample_size,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("%")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
data <- data.frame(groups =c('All','All','People with prior history of depression or suidice atempt','People with prior history of depression or suidice atempt'),
treatment=c('Treated with GLP-1RAs','Treated with Gliptins','Treated with GLP-1RAs','Treated with Gliptins'),
sample_size = c(373041,372944,88325,88325),
suicides = c(106,250,68,180))
data %>% ggplot(aes(x=groups,
y=suicides/sample_size,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("%")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
data <- data.frame(groups =c('All','All','People with prior history of depression or suidice atempt','People with prior history of depression or suidice atempt'),
treatment=c('Treated with GLP-1RAs','Treated with Gliptins','Treated with GLP-1RAs','Treated with Gliptins'),
sample_size = c(373041,372944,88325,88325),
suicides = c(106,230,68,180))
data %>% ggplot(aes(x=groups,
y=suicides/sample_size*100000,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("%")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
data %>% ggplot(aes(x=groups,
y=suicides/sample_size*100000,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("Suicides per 100k people")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
data %>% ggplot(aes(x=groups,
y=suicides/sample_size*100000,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("Suicides / 100,000 people")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
data %>% ggplot(aes(x=groups,
y=suicides/sample_size*100000,
fill=treatment)) +
scale_fill_manual(values=colors)+
geom_bar(stat='identity',position ='dodge',width=.8) +
theme_ind2()+
ylab("Suicides per 100k people")+
scale_x_discrete(labels = function(x) str_wrap(str_replace_all(x, "foo" , " "),
width = 30))+
theme(plot.title = element_text(hjust = 0.5),
legend.title=element_blank(),
axis.title.y= element_text(),
axis.text.y  = element_text(family = "halyard_light"),
axis.text.x  = element_text(family = "halyard"),
text = element_text(family = "halyard_light"),
legend.text=element_text(family='halyard_light')
)
0.28*74
74/28
74/28*100
25820*0.456
25843*0.457
load('data/gpa.RData')
load('/Users/htr365/Downloads/data 2/gpa.RData')
gpa
0.03^2
df <- read.csv('/Users/htr365/Documents/PhD/01_Copenhagen Network Study/labelling/manual_labelling_all.csv')
library(ggplot2)
names(df)
# look at inter rater agreement for ABC
df %>% select(starts_with("Impact_label_"))
icc_result <- icc(df %>% select(starts_with("Impact_label_")), model = "oneway", type = "agreement")
library(irr)
install.packages('irr')
library(irr)
library(ggplot2)
icc_result <- icc(df %>% select(starts_with("Impact_label_")), model = "oneway", type = "agreement")
icc_result
head(df %>% select(starts_with("Impact_label_")))
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_") %>% mutate(across(everythin(), ~toupper(.)))
icc_result <- icc(), model = "oneway", type = "agreement")
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_") %>% mutate(across(everything(), ~toupper(.)))
icc_result <- icc(), model = "oneway", type = "agreement")
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_") %>% mutate(across(everything(), ~toupper(.)))
icc_result <- icc(), model = "oneway", type = "agreement")
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_") %>% mutate(across(everything(), ~toupper(.x))
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_") %>% mutate(across(everything(), ~toupper(.x)))
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_") %>% mutate(across(everything(), ~toupper(.x)))
icc_result <- icc(), model = "oneway", type = "agreement")
df %>% select(starts_with("Impact_label_")
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
# look at inter rater agreement for ABC
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(), ~toupper(.x)))
impact_labels
icc_result <- icc(), model = "oneway", type = "agreement")
icc_result <- icc(, model = "oneway", type = "agreement")
icc_result <- icc(impact_labels, model = "oneway", type = "agreement")
icc_result
warnings()
icc_result <- ICC(impact_labels, model = "oneway", type = "agreement")
library(psych)
icc_result <- ICC(impact_labels, model = "oneway", type = "agreement")
install.packages('psych')
library(psych)
icc_result <- ICC(impact_labels, model = "oneway", type = "agreement")
icc_result <- ICC(impact_labels)
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(), ~as.numeric(toupper(.x))))
impact_labels <- impact_labels %>% recode(df$category, "A" = 1, "B" = 2, "C" = 3)
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(), ~, ~recode(toupper(.), "a" = 1, "b" = 2, "c" = 3)))
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(),  ~recode(toupper(.), "a" = 1, "b" = 2, "c" = 3)))
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(),  ~recode(toupper(.x), "a" = 1, "b" = 2, "c" = 3)))
# look at inter rater agreement for ABC & make all upper case
impact_labels
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(), ~toupper(.x))) %>%
mutate(across(everything(), ~recode(., "A" = 1, "B" = 2, "C" = 3)))
impact_labels
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
#mutate(across(everything(), ~toupper(.x))) %>%
mutate(across(everything(), ~recode(toupper(.x), "A" = 1, "B" = 2, "C" = 3)))
impact_labels
icc_result <- ICC(impact_labels)
icc_result
icc_result
# read in hierarchical clustering
hierarchy <- read.csv('/Users/htr365/Documents/PhD/14_upwork/labelling/hierarchical_level2.csv')
head(hierarchy)
tree <- hierarchy %>% select(Parent_ID, Child_Left_ID, Child_Right_ID)
df %>% select(starts_with("Impact_label_")),Topic)
df %>% select(starts_with("Impact_label_")),Topic)
df %>% select(starts_with("Impact_label_"),Topic)
df %>%  mutate(across(starts_with("Impact_label_"), ~toupper(.x)))
df <- df %>%  mutate(across(starts_with("Impact_label_"), ~toupper(.x)))
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(), ~recode(toupper(.x), "A" = 1, "B" = 2, "C" = 3)))
#df <- df %>%  mutate(across(starts_with("Impact_label_"), ~toupper(.x)))
write.csv(df,'/Users/htr365/Documents/PhD/01_Copenhagen Network Study/labelling/manual_labelling_all.csv')
#df <- df %>%  mutate(across(starts_with("Impact_label_"), ~toupper(.x)))
write.csv(df,'/Users/htr365/Documents/PhD/01_Copenhagen Network Study/labelling/manual_labelling_all.csv')
#df <- df %>%  mutate(across(starts_with("Impact_label_"), ~toupper(.x)))
write.csv(df,'/Users/htr365/Documents/PhD/14_upwork/labelling/manual_labelling_all.csv')
# read in ratings from all
df <- read.csv('/Users/htr365/Documents/PhD/14_upwork/labelling/manual_labelling_all.csv')
df %>% select(starts_with("Impact_label_"),Topic)
tree %>% left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Left_ID'='Topic'))
tree <- tree %>% left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Left_ID'='Topic'), suffix=c('','_left'))
tree <- tree %>% left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Left_ID'='Topic'), suffix=c('','_left')) %>%
left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Right_ID'='Topic'), suffix=c('','_right'))
head(tree)
dim(tree)
# merge in labels
tree <- hierarchy %>% select(Parent_ID, Child_Left_ID, Child_Right_ID)
tree <- tree %>% left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Left_ID'='Topic'), suffix=c('','_left')) %>%
left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Right_ID'='Topic'), suffix=c('','_right'))
head(tree)
ICC(impact_labels)
# Define threshold for low agreement
threshold <- 0.5  # Adjust this threshold as needed
# Find instances with low agreement
low_agreement_instances <- icc_result[icc_result$ICC < threshold, ]
icc_result$ICC
icc_result$results
icc_result$lme
icc_result$summary
icc_result$stats
icc_result <- icc(impact_labels)
icc_result
icc_result$icc.name
icc_result$icc.name
icc(impact_labels, model = "oneway", type = "agreement")
icc_result <- icc(impact_labels, model = "oneway", type = "agreement")
# Define threshold for low agreement
threshold <- 0.5  # Adjust this threshold as needed
# Find instances with low agreement
low_agreement_instances <- icc_result[icc_result$ICC < threshold, ]
icc_result$value
impact_labels==1
rowSums(impact_labels==1)
impact_labels <- impact_labels %>% mutate(A_sum = rowSums(impact_labels==1),
B_sum = rowSums(impact_labels==2),
C_sum = rowSums(impact_labels==3))
impact_labels
# find observations with low agreement
impact_labels %>% mutate(min = min(A_sum, B_sum, C_sum))
# find observations with low agreement
impact_labels %>% mutate(min = min(A_sum, B_sum, C_sum,na.rm=TRUE))
# find observations with low agreement
impact_labels %>% rowwise() %>% mutate(min = min(A_sum, B_sum, C_sum))
# find observations with low agreement
impact_labels <- impact_labels %>% rowwise() %>% mutate(min = min(A_sum, B_sum, C_sum))
# find observations with low agreement
impact_labels <- impact_labels %>% rowwise() %>% mutate(max = max(A_sum, B_sum, C_sum))
impact_labels$max ==2
sum(impact_labels$max ==2)
sum(impact_labels$max ==2, na.rm=TRUE)
# get percentage of observations with max possible disagreement
sum(impact_labels$max ==2, na.rm=TRUE)/dim(impact_labels)[1]
# get percentage with total agreement
sum(impact_labels$max ==5, na.rm=TRUE)/dim(impact_labels)[1]
tre
tree
head(tree)
tree %>% %>% select(starts_with("Impact_label_"))
most_common <- apply(df[, -1], 1, function(row) {
table_row <- table(row)
names(table_row)[which.max(table_row)]
})
# Print the result
print(most_common)
most_common <- apply(tree %>%select(starts_with("Impact_label_"))[, -1], 1, function(row) {
table_row <- table(row)
names(table_row)[which.max(table_row)]
})
most_common <- apply((tree %>%select(starts_with("Impact_label_")))[, -1], 1, function(row) {
table_row <- table(row)
names(table_row)[which.max(table_row)]
})
most_common
tree$most_common <- apply((tree %>%select(starts_with("Impact_label_")))[, -1], 1, function(row) {
table_row <- table(row)
names(table_row)[which.max(table_row)]
})
head(tree)
tree <- tree %>%
mutate(across(starts_with("Impact_label_"), ~recode(toupper(.x), "A" = 1, "B" = 2, "C" = 3)))
tree
percentage_agreement <- rowMeans(apply(tree[, -1], 1, function(row) {
length(unique(row)) == 1
}))
percentage_agreement <- rowMeans(apply((tree%>%select(starts_with("Impact_label_")))[, -1], 1, function(row) {
length(unique(row)) == 1
}))
(tree%>%select(starts_with("Impact_label_")))[, -1]
tree
head(tree)
head(tree)[, -1])
head(tree[, -1])
tree$most_common <- apply((tree %>%select(starts_with("Impact_label_"))), 1, function(row) {
table_row <- table(row)
names(table_row)[which.max(table_row)]
})
tree <- tree %>%
mutate(across(starts_with("Impact_label_"), ~recode(toupper(.x), "A" = 1, "B" = 2, "C" = 3)))
percentage_agreement <- rowMeans(apply((tree%>%select(starts_with("Impact_label_")), 1, function(row) {
percentage_agreement <- rowMeans(apply((tree%>%select(starts_with("Impact_label_"))), 1, function(row) {
length(unique(row)) == 1
}))
table(tree %>% select(starts_with("Impact_label_"))
table(tree %>% select(starts_with("Impact_label_")))
tree %>% select(starts_with("Impact_label_")
tree %>% select(starts_with("Impact_label_"))
# read in ratings from all
df <- read.csv('/Users/htr365/Documents/PhD/14_upwork/labelling/manual_labelling_all.csv')
# look at inter rater agreement for ABC & make all upper case
impact_labels <- df %>% select(starts_with("Impact_label_")) %>%
mutate(across(everything(), ~recode(toupper(.x), "A" = 1, "B" = 2, "C" = 3)))
icc_result <- icc(impact_labels)
# get some of labels for each cluster
impact_labels <- impact_labels %>% mutate(A_sum = rowSums(impact_labels==1),
B_sum = rowSums(impact_labels==2),
C_sum = rowSums(impact_labels==3))
# find observations with low agreement
impact_labels <- impact_labels %>% rowwise() %>% mutate(max = max(A_sum, B_sum, C_sum))
# get percentage of observations with max possible disagreement
sum(impact_labels$max ==2, na.rm=TRUE)/dim(impact_labels)[1]
# get percentage with total agreement
sum(impact_labels$max ==5, na.rm=TRUE)/dim(impact_labels)[1]
# read in hierarchical clustering
hierarchy <- read.csv('/Users/htr365/Documents/PhD/14_upwork/labelling/hierarchical_level2.csv')
# merge in labels
tree <- hierarchy %>% select(Parent_ID, Child_Left_ID, Child_Right_ID)
tree <- tree %>% left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Left_ID'='Topic'), suffix=c('','_left')) %>%
left_join(df %>% select(starts_with("Impact_label_"),Topic), by=c('Child_Right_ID'='Topic'), suffix=c('','_right'))
tree$most_common <- apply((tree %>%select(starts_with("Impact_label_"))), 1, function(row) {
table_row <- table(row)
names(table_row)[which.max(table_row)]
})
table(tree %>% select(starts_with("Impact_label_")))
apply(table(tree %>% select(starts_with("Impact_label_"))),1, table)
rowSumsapply(table(tree %>% select(starts_with("Impact_label_"))), function(row) table(row))
rowSum(sapply(table(tree %>% select(starts_with("Impact_label_"))), function(row) table(row)))
rowSums(apply(table(tree %>% select(starts_with("Impact_label_"))), function(row) table(row)))
rowSums(apply(tree %>% select(starts_with("Impact_label_")), function(row) table(row)))
rowSums(apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)))
tree %>% select(starts_with("Impact_label_"))
rowSums(apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)))
tree %>% select(starts_with("Impact_label_"))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row))
apply(tree %>% select(starts_with("Impact_label_")),1,function(row) sum(table(row)))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) max(table(row))))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) max(table(row)))
rowSums(apply(tree %>% select(starts_with("Impact_label_")), function(row) table(row)))
apply(tree %>% select(starts_with("Impact_label_")), function(row) table(row))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)==max(table(row)))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row))])
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) names(table(row)[table(row)==max(table(row))]))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) names(table(row)[table(row)==max(table(row))])[[1]])
tree$apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row)))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row)))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row)))
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row))])
apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row))][1])
tree$degree_overlap <- apply(tree %>% select(starts_with("Impact_label_")),1, function(row) table(row)[table(row)==max(table(row))][1])/10
tree
tree$degree_overlap==1
sum(tree$degree_overlap==1)
dim(tree)
31/222
write.csv(tree,'/Users/htr365/Documents/PhD/14_upwork/labelling/clusters_222_labels.csv')
tree
hierarchy
names(hierarchy)
# merge in cluster description names
tree %>% left_join(hierarchy %>% select(Parent_ID, Parent_Name, Child_Left_name, Child_Right_Name, Distance), by='Parent_ID')
# merge in cluster description names
tree %>% left_join(hierarchy %>% select(Parent_ID, Parent_Name, Child_Left_Name, Child_Right_Name, Distance), by='Parent_ID')
# merge in cluster description names
tree <- tree %>% left_join(hierarchy %>% select(Parent_ID, Parent_Name, Child_Left_Name, Child_Right_Name, Distance), by='Parent_ID')
write.csv(tree,'/Users/htr365/Documents/PhD/14_upwork/labelling/clusters_222_labels.csv')
names(tree)
dim(tree)
dim(df)
names(df)
df$Topic
df$Topic
df$Topic %in% tree$Parent_ID
df$Topic %in% tree$Child_Left_ID
(df$Topic %in% tree$Child_Left_ID)*(df$Topic %in% tree$Child_Right_ID)
(df$Topic %in% tree$Child_Left_ID)+(df$Topic %in% tree$Child_Right_ID)
sum((df$Topic %in% tree$Child_Left_ID)+(df$Topic %in% tree$Child_Right_ID))
